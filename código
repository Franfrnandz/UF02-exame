/*Programa que mapea a entrada dun potenciómetro a catro cores.
 *
 *Usaremos un LED RGB para a simulación con control mediante un 
 *potenciómetro 
 *
 *
 *Autor: Fran Fernández
 *Data: Marzo de 2024
 *Actualización:
*/

//Declaración de entradas analóxicas
#define POT A0

//Declaración de saídas analóxicas
#define LedR 6
#define LedG 3
#define LedB 5

//Define ANODOCOMUN

//Declaración de variables
int tempo = 600;
int pot = 0;
int nivel = -1;
int nNiveis = 4; //Número de valores que toma a variable de nivel
unsigned long nCores = (unsigned long) 256*256*256;
unsigned long cor = -1;
byte r, g, b = -1;

//Cores RGB: 256*256*256 = 16 777 216
  
void setup(){
  //Non é preciso declarar as entrada ou saídas analóxicas
  Serial.begin(9600);
}

 void loop() {
  //Leer o valor do potenciómetro.
  pot = analogRead(POT);
  nivel = map(pot, 0, 1023, 0, 16);
      
  switch(nivel) {
    case 0:
       setVermello();
       break;
    
    case 1:
       setAmarelo();
       break;
    
    case 2:
       setVerde();
       break;
    
    case 3:
       setAzul();
       break;
    
  }
  Serial.print("HEX="); Serial.println(HEX);
  Serial.print("BIN=");  Serial.println(BIN);
  Serial.print("DEC=");Serial.println(DEC);
  delay(200);
  
  
    
  //Asinar un nivel (4 cores)
  //Escribir o valor no LED RGB
  //setRGBoff();
  if(pot >= 0 && pot < 204) {
  //Encende vermello
  setVermello();
  }
  else if(pot >= 204 && pot < 408) {
  //Encende amarelo
  setAmarelo();
  }
  else if(pot >= 408 && pot < 612) {
  //Encende verde
  setVerde();
  }
  else if(pot >= 612 && pot < 816) {
  //Encende azul
  setAzul();
  }

  
}


//Funcións auxiliares
void setVermello() {
  setColor(255, 0, 0);
}

void setVerde() {
  setColor(0, 255, 0);
}

void setAmarelo() {
  setColor(255, 191, 0);
}

void setAzul() {
  setColor(0, 0, 255);
}


void setRGBoff() {
  setColor(0, 0, 0);
}

void setColor(int vermello, int verde, int azul) {
 #ifdef ANODO_COMUN
  vermello = 255 - vermello;
  verde = 255 - verde;
  azul = 255 - azul; 
 #endif
  analogWrite(LedR, vermello);
  analogWrite(LedG, verde);
  analogWrite(LedB, azul);
}
